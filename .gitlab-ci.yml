stages:
  - test
  - build
  - deploy

eslint:
  stage: test
  image: node:latest
  before_script:
   - npm install
  script:
    - npm run eslint

stylelint:
  stage: test
  image: node:latest
  before_script:
   - npm install
  script:
    - npm run stylelint

build_master:
  stage: build
  image: docker:stable
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --cache-from "$CI_REGISTRY_IMAGE:latest" --pull -t "$CI_REGISTRY_IMAGE:latest" ./
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master
  environment:
    name: production
    url: https://amiv.ethz.ch

# On branches except master: verify that build works, do not push to registry
build:
  stage: build
  image: docker:stable
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  script:
    - docker build --cache-from "$CI_REGISTRY_IMAGE:latest" --pull ./
  except:
    - master

deploy_cluster:
  stage: deploy
  image: amiveth/service-update-helper
  script:
    - /update.py
  only:
    - master

deploy_pazuzu:
  stage: deploy
  image: amiveth/service-update-helper
  before_script:
    - export CI_DEPLOY_URL="$CI_DEPLOY_URL_PAZUZU"
  script:
    - /update.py
  only:
    - master
