stages:
  - prepare
  - test
  - build
  - deploy

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/

npm:
  stage: prepare
  image: node:latest
  script:
    - /usr/bin/npm install

eslint:
  stage: test
  image: node:latest
  script:
    - /usr/bin/npm run eslint

stylelint:
  stage: test
  image: node:latest
  script:
    - /usr/bin/npm run stylelint

build_master:
  stage: build
  image: docker:latest
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  services:
    - docker:dind
  before_script:
    - /usr/bin/docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - /usr/bin/docker build --pull -t "$CI_REGISTRY_IMAGE" ./
    - /usr/bin/docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

# On branches except master: verify that build works, do not push to registry
build:
  stage: build
  image: docker:latest
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  services:
    - docker:dind
  script:
    - /usr/bin/docker build --pull ./
  except:
    - master

deploy:
  stage: deploy
  image: amiveth/service-update-helper
  script:
    - /update.py
  only:
    - master
